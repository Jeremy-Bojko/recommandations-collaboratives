# Generated by Django 3.2.18 on 2023-09-28 13:34

from django.db import migrations, models
import django.db.models.manager
import django.utils.timezone
import tagging.fields
import urbanvitaliz.apps.tasks.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("projects", "0091_moving_task_to_app"),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, editable=False, verbose_name="order"
                    ),
                ),
                ("public", models.BooleanField(blank=True, default=False)),
                (
                    "priority",
                    models.PositiveIntegerField(
                        blank=True,
                        default=1000,
                        help_text="Plus le chiffre est élevé, plus la recommandation s'affichera en haut.",
                        verbose_name="Priorité",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date de création",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Dernière mise à jour",
                    ),
                ),
                ("tags", models.CharField(blank=True, default="", max_length=256)),
                (
                    "intent",
                    models.CharField(
                        blank=True, default="", max_length=256, verbose_name="Intention"
                    ),
                ),
                ("content", models.TextField(default="", verbose_name="Contenu")),
                ("deadline", models.DateField(blank=True, null=True)),
                ("visited", models.BooleanField(blank=True, default=False)),
                ("refused", models.BooleanField(blank=True, default=False)),
                ("done", models.BooleanField(blank=True, default=False)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "proposé"),
                            (1, "en cours"),
                            (2, "blocage"),
                            (3, "terminé"),
                            (4, "pas intéressé·e"),
                            (5, "déjà fait"),
                        ],
                        default=0,
                    ),
                ),
                ("deleted", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "action",
                "verbose_name_plural": "actions",
                "db_table": "projects_task",
                "ordering": [],
                "managed": False,
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("on_site", urbanvitaliz.apps.tasks.models.TaskOnSiteManager()),
                (
                    "deleted_on_site",
                    urbanvitaliz.apps.tasks.models.DeletedTaskOnSiteManager(),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskFollowup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "proposé"),
                            (1, "en cours"),
                            (2, "blocage"),
                            (3, "terminé"),
                            (4, "pas intéressé·e"),
                            (5, "déjà fait"),
                        ],
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("comment", models.TextField(blank=True, default="")),
            ],
            options={
                "verbose_name": "suivi action",
                "verbose_name_plural": "suivis actions",
                "db_table": "projects_taskfollowup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TaskFollowupRsvp",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name": "rsvp suivi action",
                "verbose_name_plural": "rsvp suivis actions",
                "db_table": "projects_taskfollowuprsvp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TaskRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "condition",
                    tagging.fields.TagField(
                        blank=True, max_length=255, null=True, verbose_name="Condition"
                    ),
                ),
                ("text", models.TextField()),
            ],
            options={
                "db_table": "projects_taskrecommendation",
                "managed": False,
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                (
                    "on_site",
                    urbanvitaliz.apps.tasks.models.TaskRecommendationOnSiteManager(),
                ),
            ],
        ),
    ]

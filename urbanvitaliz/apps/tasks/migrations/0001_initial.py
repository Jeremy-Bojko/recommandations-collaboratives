# Generated by Django 3.2.18 on 2023-09-05 14:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import tagging.fields
import urbanvitaliz.apps.tasks.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('resources', '0029_remove_resource_old_tags'),
        ('geomatics', '0004_alter_department_region'),
        ('addressbook', '0009_alter_organization_departments'),
        ('projects', '0091_auto_20230905_1603'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('public', models.BooleanField(blank=True, default=False)),
                ('priority', models.PositiveIntegerField(blank=True, default=1000, help_text="Plus le chiffre est élevé, plus la recommandation s'affichera en haut.", verbose_name='Priorité')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date de création')),
                ('updated_on', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Dernière mise à jour')),
                ('tags', models.CharField(blank=True, default='', max_length=256)),
                ('intent', models.CharField(blank=True, default='', max_length=256, verbose_name='Intention')),
                ('content', models.TextField(default='', verbose_name='Contenu')),
                ('deadline', models.DateField(blank=True, null=True)),
                ('visited', models.BooleanField(blank=True, default=False)),
                ('refused', models.BooleanField(blank=True, default=False)),
                ('done', models.BooleanField(blank=True, default=False)),
                ('status', models.IntegerField(choices=[(0, 'proposé'), (1, 'en cours'), (2, 'blocage'), (3, 'terminé'), (4, 'pas intéressé·e'), (5, 'déjà fait')], default=0)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='addressbook.contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_created', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project')),
                ('resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.resource')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
                ('topic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.topic')),
            ],
            options={
                'verbose_name': 'action',
                'verbose_name_plural': 'actions',
                'db_table': 'projects_task',
                'ordering': [],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', urbanvitaliz.apps.tasks.models.TaskOnSiteManager()),
                ('deleted_on_site', urbanvitaliz.apps.tasks.models.DeletedTaskOnSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='TaskRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', tagging.fields.TagField(blank=True, max_length=255, null=True, verbose_name='Condition')),
                ('text', models.TextField()),
                ('departments', models.ManyToManyField(blank=True, to='geomatics.Department', verbose_name='Départements concernés')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_recommendations', to='resources.resource')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'db_table': 'projects_taskrecommendation',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', urbanvitaliz.apps.tasks.models.TaskRecommendationOnSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='TaskFollowupRsvp',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rsvp_followups', to='tasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rsvp_followups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'rsvp suivi action',
                'verbose_name_plural': 'rsvp suivis actions',
                'db_table': 'projects_taskfollowuprsvp',
            },
        ),
        migrations.CreateModel(
            name='TaskFollowup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(blank=True, choices=[(0, 'proposé'), (1, 'en cours'), (2, 'blocage'), (3, 'terminé'), (4, 'pas intéressé·e'), (5, 'déjà fait')], null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.TextField(blank=True, default='')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='tasks.task')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_followups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'suivi action',
                'verbose_name_plural': 'suivis actions',
                'db_table': 'projects_taskfollowup',
            },
        ),
    ]
